<?php
// Define constant to prevent direct access to included files
define('INCLUDED_FROM_APP', true);

session_start();
require_once '../functions.php';

// Disable output buffering to prevent unexpected output
ob_start();

// Set the content type to JSON
header('Content-Type: application/json');

// Enable detailed error logging, but don't display errors
ini_set('display_errors', 0);
error_reporting(E_ALL);

// Function to return JSON response and exit
function send_json_response($success, $message) {
    $response = json_encode(['success' => $success, 'error' => $message]);
    // Clean any previous output
    ob_end_clean();
    echo $response;
    exit;
}

// Check if user is admin or baby admin
$logged_in_user = $_SESSION['username'] ?? '';
if (!hasRole($logged_in_user, 'admin') && !hasRole($logged_in_user, 'baby admin')) {
    error_log("Unauthorized access attempt to email_report.php by: " . $logged_in_user);
    send_json_response(false, 'Unauthorized access');
}

// Check for PHPMailer installation
$phpmailer_exists = file_exists(__DIR__ . '/../lib/PHPMailer/src/PHPMailer.php');
if (!$phpmailer_exists) {
    error_log("PHPMailer is not installed");
    send_json_response(false, 'PHPMailer is not installed. Please install PHPMailer first.');
}

// Include SMTP configuration
if (!defined('SMTP_HOST')) {
    require_once '../lib/smtp_config.php';
}

// Get email parameters
$email_addresses = $_POST['email_addresses'] ?? '';
$report_html = $_POST['report_html'] ?? '';

// Enhanced logging
error_log("Email report requested by: " . $logged_in_user);
error_log("Email addresses (raw): " . $email_addresses);
error_log("Report HTML length: " . strlen($report_html));

// Validate inputs
if (empty($email_addresses)) {
    error_log("Missing email addresses parameter");
    send_json_response(false, 'No email addresses provided');
}

if (empty($report_html)) {
    error_log("Missing report_html parameter");
    send_json_response(false, 'Missing report content');
}

try {
    // Split email addresses and validate each one
    $addresses = array_map('trim', explode(',', $email_addresses));
    error_log("Parsed email addresses: " . print_r($addresses, true));
    
    $valid_addresses = array_filter($addresses, function($email) {
        $valid = filter_var($email, FILTER_VALIDATE_EMAIL);
        if (!$valid) {
            error_log("Invalid email address: " . $email);
        }
        return $valid;
    });

    error_log("Valid email addresses count: " . count($valid_addresses));

    if (empty($valid_addresses)) {
        send_json_response(false, 'No valid email addresses provided');
    }

    // Email subject
    $subject = 'TIMEMASTER Time Clock Report';

    // Email body
    $body = '
    <html>
    <head>
        <style>
            body { font-family: Arial, sans-serif; margin: 0; padding: 20px; }
            table { border-collapse: collapse; width: 100%; margin-bottom: 20px; }
            th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
            th { background-color: #f2f2f2; font-weight: bold; }
            .employee-section { margin-bottom: 20px; }
            h1 { color: #c0392b; }
            .report-period { color: #666; margin-bottom: 20px; }
        </style>
    </head>
    <body>
        <h1>Time Clock Report</h1>
        <p class="report-period">This report was generated by ' . htmlspecialchars($logged_in_user) . ' on ' . date('M d, Y H:i:s') . '</p>
        ' . $report_html . '
    </body>
    </html>';

    // Email body (truncated for log)
    error_log("Email body length: " . strlen($body) . " characters");

    // Send email using SMTP
    $result = send_smtp_email($valid_addresses, $subject, $body);
    
    if ($result['success']) {
        error_log("Email sent successfully via SMTP");
        send_json_response(true, 'Report sent successfully');
    } else {
        error_log("SMTP Email sending failed: " . $result['message']);
        send_json_response(false, 'Failed to send email: ' . $result['message']);
    }

} catch (Exception $e) {
    $error_message = $e->getMessage();
    $trace = $e->getTraceAsString();
    error_log('Email error: ' . $error_message);
    error_log('Stack trace: ' . $trace);
    send_json_response(false, 'Error sending email: ' . $error_message);
} 